{"version":3,"sources":["./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/_services/auth.service.ts","./src/environments/environment.ts","./src/app/_services/token-storage.service.ts","./src/app/converter/currency.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/converter/converter.component.html","./src/app/converter/converter.component.ts","./src/app/app.module.ts","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <!-- Bootstrap CSS -->\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n        <!-- Javascript -->\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n    </head>\n    <body>\n        <div class=\"col-md-12\">\n            <div class=\"card card-container\">\n              <form\n                *ngIf=\"!isSuccessful\"\n                name=\"form\"\n                (ngSubmit)=\"f.form.valid && onSubmit()\"\n                #f=\"ngForm\"\n                novalidate\n              >\n                <div class=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    name=\"email\"\n                    [(ngModel)]=\"form.email\"\n                    required\n                    email\n                    #email=\"ngModel\"\n                  />\n                  <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\n                    <div *ngIf=\"email.errors.required\">Email is required</div>\n                    <div *ngIf=\"email.errors.email\">\n                      Email must be a valid email address\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    name=\"password\"\n                    [(ngModel)]=\"form.password\"\n                    required\n                    minlength=\"4\"\n                    #password=\"ngModel\"\n                  />\n                  <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\n                    <div *ngIf=\"password.errors.required\">Password is required</div>\n                    <div *ngIf=\"password.errors.minlength\">\n                      Password must be at least 4 characters\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <button class=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n          \n                <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n                  Signup failed!<br />{{ errorMessage }}\n                </div>\n              </form>\n          \n              <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n                Your registration is successful!\n              </div>\n            </div>\n          </div>\n    </body>\n</html>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Config } from 'protractor';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiServerUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient) { }\n\n  login(email: string, password: string): Observable<HttpResponse<Config>> {\n    return this.http.post<Config>(`${this.apiServerUrl}/login`, {\n      email,\n      password\n    }, {observe: 'response'});\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(`${this.apiServerUrl}/register`, {\n      email: user.email,\n      password: user.password\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n","import { HttpClient} from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Currency } from './currency';\nimport { AllCurrency } from './allCurrency';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CurrencyService {\n    private apiServerUrl = environment.apiBaseUrl;\n\n    constructor(private http: HttpClient) {}\n\n    public getAllCurrency(): Observable<AllCurrency[]> {\n        return this.http.get<AllCurrency[]>(`${this.apiServerUrl}/currency/all/`);\n    }\n\n    public getValueFromPln(currency: string, quantity: string): Observable<Currency> {\n        return this.http.get<Currency>(`${this.apiServerUrl}/currency/from/${currency}/${quantity}`);\n    }\n\n    public getValueToPln(currency: string, quantity: string): Observable<Currency> {\n        return this.http.get<Currency>(`${this.apiServerUrl}/currency/to/${currency}/${quantity}`);\n    }\n}","<html>\n  <head>\n    meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <!-- Bootstrap CSS -->\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  <!-- Javascript -->\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n  </head>\n\n  <body>\n    <div id=\"app\">\n      <nav class=\"navbar navbar-dark bg-primary\">\n        <button *ngIf=\"!isLoggedIn\" class=\"btn btn-primary btn-lg btn-block\" href=\"/login\" routerLink=\"login\">Login</button>\n        <button *ngIf=\"isLoggedIn\" class=\"btn btn-primary btn-lg btn-block\" href (click)=\"logout()\">Log Out</button>\n        <button *ngIf=\"!isLoggedIn\" class=\"btn btn-primary btn-lg btn-block\" href=\"/register\" routerLink=\"register\">Register</button>\n      </nav>\n    \n      <div class=\"container\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </body>\n</html>\n","import { relativeToRootDirs } from '@angular/compiler-cli/src/transformers/util';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenStorageService } from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  isLoggedIn = false;\n\n  constructor(\n    private tokenStorageService: TokenStorageService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if(this.isLoggedIn) {\n      this.router.navigate(['converter']);\n    } else {\n      this.router.navigate['login'];\n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    window.location.reload();\n  }\n}\n","<html>\n<head>\n  <title>Currency Converter</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <!-- Bootstrap CSS -->\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  <!-- Javascript -->\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n<style>\n  \n.panel {\nbackground: #333335;\nborder: solid white;\n}\n\n.results {\nfont-size: 1em;\ncolor: #FFFFFF;\ntext-align-last: center;\n}\n\ninput {\n   text-align: center;\n}\n\nselect { \n  text-align-last: center;\n}\n\n</style>\n\n</head>\n\n<body>\n\n<div style=\"padding: 0;\" class=\"container\" *ngIf=\"isLoggedIn\">\n  <div class=\"col-md-6 col-md-offset-3\">\n    <div class=\"panel panel-primary text-center\">\n      <div class=\"panel-heading\">\n        <h4 class=\"panel-title\">Currency Converter</h4>\n      </div>\n      <div class=\"panel-body\">\n        <form #currencyForm=\"ngForm\" (ngSubmit)=\"checkMode(currencyForm)\" role=\"form\" *ngFor=\"let allCurrency of allCurrency$\" class=\"form-vertical\">\n\n          <div class=\"form-group\">\n            <input type=\"number\" ngModel name=\"quantity\" class=\"amount form-control\" placeholder=\"Enter amount\" min=\"0.01\" step=\"0.01\" oninput=\"validity.valid||(value='');\">\n          </div>\n\n          <div class=\"form-group\">\n            <div>\n              <mat-button-toggle-group class=\"btn-group\" value=\"from PLN\" #toggleGroup=\"matButtonToggleGroup\">\n                <mat-button-toggle class=\"btn btn-primary btn-lg btn-block\" value=\"from PLN\">From PLN</mat-button-toggle>\n                <mat-button-toggle class=\"btn btn-primary btn-lg btn-block\" value=\"to PLN\">To PLN</mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n            <div>\n              <label id=\"toggleButton\" class=\"results\">Mode {{toggleGroup.value}}</label>\n            </div>\n            <label id=\"results\" class=\"results\">Select currency</label>\n            <select ngModel name=\"code\" class=\"form-control\">\n              <option value=\"\" [disabled]=\"true\">-- Select currency --</option>\n              <option *ngFor=\"let rate of allCurrency.rates\">{{ rate.code }}</option>\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-primary\">Convert</button>\n          </div>\n        </form>\n        <p id=\"result\" class=\"results\"></p>\n      </div>\n      <button id=\"showBtn\" (click)=\"showTable()\" class=\"btn btn-primary\">Show/Hide table</button>\n      <div *ngIf=\"show\">\n        <table class=\"table\">\n          <thead>\n            <tr class=\"results\" >\n              <th scope=\"col\">Currency</th>\n              <th scope=\"col\">Rate</th>\n              <th scope=\"col\">Effective Date</th>\n            </tr>\n          </thead>\n          <tbody *ngFor=\"let allCurrency of allCurrency$\" class=\"results\">\n            <tr *ngFor=\"let rate of allCurrency.rates\">\n              <td>{{ rate.code }} - {{ rate.currency }}</td>\n              <td>1 {{ rate.code }} = {{ rate.mid }} PLN</td>\n              <td>{{ allCurrency.effectiveDate }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n</body>\n</html>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { AllCurrency, Rate } from './allCurrency';\nimport { Currency } from './currency';\nimport { CurrencyService } from './currency.service';\nimport { Router } from '@angular/router';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-root-converter',\n  templateUrl: './converter.component.html',\n  styleUrls: ['./converter.component.css']\n})\n\nexport class ConverterComponent implements OnInit {\n  public allCurrency$: AllCurrency[];\n  public currency$: Currency;\n\n  public show: boolean = false;\n  public showBtn: any = 'Show';\n\n  isLoggedIn = false;\n\n  value: string;\n\n  constructor(private currencyService: CurrencyService,\n    private tokenStorage: TokenStorageService,\n    private router: Router) {}\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.getAllCurrency();\n    }\n  }\n\n  showTable() {\n    this.show = !this.show;\n\n    if(this.show)  \n      this.showBtn = \"Hide\";\n    else\n      this.showBtn = \"Show\";\n  }\n\n  public checkMode(currencyForm: FormGroup) {\n\n    this.value = document.getElementById('toggleButton').textContent;\n\n    if(this.value === \"Mode to PLN\") {\n      this.toPln(currencyForm)\n    } else {\n      this.fromPln(currencyForm)\n    }\n  }\n\n  public getAllCurrency(): void {\n    this.currencyService.getAllCurrency().subscribe(\n      (response: AllCurrency[]) => {\n        this.allCurrency$ = response;\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    )\n  }\n\n  public toPln(currencyForm: FormGroup) {\n     this.currencyService.getValueToPln(currencyForm.value.code, currencyForm.value.quantity).subscribe(\n       (response: Currency) => {\n         this.currency$ = response;\n         document.getElementById('result').textContent = this.currency$.result + \" PLN\"; \n       }\n     )\n  }\n\n  public fromPln(currencyForm: FormGroup) {\n    this.currencyService.getValueFromPln(currencyForm.value.code, currencyForm.value.quantity).subscribe(\n      (response: Currency) => {\n        this.currency$ = response;\n        document.getElementById('result').textContent = this.currency$.result + \" \" + this.currency$.code; \n      }\n    )\n }\n}","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CurrencyService } from './converter/currency.service';\nimport {MatTableModule} from '@angular/material/table';\nimport { LoginComponent } from './login/login.component';\nimport { ConverterComponent } from './converter/converter.component'\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ConverterComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatButtonToggleModule,\n    MatTableModule\n  ],\n  providers: [CurrencyService, authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Observable } from 'rxjs';\n\nconst TOKEN_HEADER_KEY = 'Authorization';       \n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component'\nimport { ConverterComponent } from './converter/converter.component'\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'converter', component: ConverterComponent },\n  { path: '', redirectTo: 'login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<html>\n  <head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <!-- Bootstrap CSS -->\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n  <!-- Javascript -->\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n  </head>\n  <body>\n    <div class=\"col-md-12\">\n      <div class=\"card card-container\">\n        <form\n          *ngIf=\"!isLoggedIn\"\n          name=\"form\"\n          (ngSubmit)=\"f.form.valid && onSubmit()\"\n          #f=\"ngForm\"\n          novalidate\n        >\n          <div class=\"form-group\">\n            <label for=\"username\">Email</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"username\"\n              [(ngModel)]=\"form.email\"\n              required\n              #username=\"ngModel\"\n            />\n            <div\n              class=\"alert alert-danger\"\n              role=\"alert\"\n              *ngIf=\"username.errors && f.submitted\"\n            >\n              Email is required!\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              name=\"password\"\n              [(ngModel)]=\"form.password\"\n              required\n              minlength=\"4\"\n              #password=\"ngModel\"\n            />\n            <div\n              class=\"alert alert-danger\"\n              role=\"alert\"\n              *ngIf=\"password.errors && f.submitted\"\n            >\n              <div *ngIf=\"password.errors.required\">Password is required</div>\n              <div *ngIf=\"password.errors.minlength\">\n                Password must be at least 4 characters\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <button class=\"btn btn-primary btn-block\">\n              Login\n            </button>\n          </div>\n          <div class=\"form-group\">\n            <div\n              class=\"alert alert-danger\"\n              role=\"alert\"\n              *ngIf=\"f.submitted && isLoginFailed\"\n            >\n              Login failed: Wrong Username or Password\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    \n  </body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  header = '';\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n    }\n  }\n\n  onSubmit(): void {\n    const { email, password } = this.form;\n\n    this.authService.login(email, password).subscribe(\n    resp => {\n        this.header = resp.headers.get('Authorization');\n        console.log(this.header);\n        this.tokenStorage.saveToken(this.header);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.reloadPage();\n      },\n      err => {\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}